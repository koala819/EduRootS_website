---
// Testimonials.astro
// Définition des témoignages
interface Testimonial {
  id: number;
  content: string;
  author: string;
  position: string;
  rating: number;
}

const testimonials: Testimonial[] = [
  {
    id: 1,
    content: "EduXcoM nous a permis de simplifier considérablement la gestion administrative de notre établissement. Le gain de temps est remarquable et les outils analytiques nous offrent une vision claire de nos performances académiques.",
    author: "Marie",
    position: "Directrice",
    rating: 5
  },
  {
    id: 2,
    content: "En tant que professeur, je peux désormais consacrer plus de temps à mes élèves plutôt qu'aux tâches administratives. Le suivi des notes et des devoirs est devenu un jeu d'enfant, et les parents apprécient la transparence.",
    author: "Thomas",
    position: "Enseignant",
    rating: 5
  },
  {
    id: 3,
    content: "Les fonctionnalités de communication avec les parents ont transformé notre relation avec les familles.",
    author: "Sophie",
    position: "Enseignante",
    rating: 5
  },
  {
    id: 4,
    content: "La transition vers EduXcoM a été incroyablement simple. La formation a été rapide et l'équipe pédagogique a adopté l'outil dès les premières semaines. L'interface intuitive a été un facteur déterminant dans cette adoption rapide.",
    author: "Marc",
    position: "Bureau administratif",
    rating: 5
  },
  {
    id: 5,
    content: "Les tableaux de bord personnalisés nous permettent d'avoir une vision claire des progrès de chaque classe. Cela nous aide à identifier rapidement les domaines nécessitant une attention particulière et à adapter nos méthodes pédagogiques en conséquence.",
    author: "Céline",
    position: "Bureau administratif",
    rating: 5
  }
];
---

<section id="testimonials" class="py-20 overflow-hidden bg-white dark:bg-dark">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold tracking-tight text-dark dark:text-light">
        Témoignages
      </h2>
      <p class="mt-4 text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        Ce que nos utilisateurs disent d'EduXcoM
      </p>
    </div>

    <div class="relative">
      <div class="max-w-4xl mx-auto">
        <!-- Testimonial Container -->
        <div class="testimonial-container relative bg-light-dark dark:bg-dark-lighter rounded-2xl shadow-xl">
          <!-- Background decorative elements -->
          <div class="absolute -top-4 -right-4 w-24 h-24 bg-primary/10 dark:bg-primary-dark/10 rounded-full opacity-50"></div>
          <div class="absolute -bottom-6 -left-6 w-32 h-32 bg-secondary/10 dark:bg-secondary-dark/10 rounded-full opacity-50"></div>

          <!-- Testimonials -->
          <div class="testimonial-slides relative">
            {testimonials.map((testimonial, index) => (
              <div
                id={`testimonial-${testimonial.id}`}
                class:list={[
                  "p-8 md:p-10 transition-all duration-500 testimonial-slide",
                  { "opacity-0 invisible absolute inset-0": index !== 0 }
                ]}
                data-index={index}
              >
                <!-- Rating - Left aligned -->
                <div class="flex mb-6 justify-start">
                  {Array(testimonial.rating).fill(0).map(() => (
                    <span class="text-amber-400 mr-1 text-4xl">★</span>
                  ))}
                </div>

                <blockquote class="mb-8">
                  <!-- Text - Left aligned with larger font -->
                  <p class="text-xl text-dark dark:text-light leading-relaxed italic text-left">
                    "{testimonial.content}"
                  </p>
                </blockquote>

                <!-- Footer with right-aligned signature -->
                <div class="border-t border-gray-200 dark:border-gray-700 pt-4 mt-4">
                  <div class="text-right">
                    <div class="font-medium text-dark dark:text-light text-lg">
                      {testimonial.author}
                    </div>
                    <div class="text-gray-500 dark:text-gray-400">
                      {testimonial.position}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- Navigation Buttons - Outside the card -->
        <div class="flex justify-between mt-12">
          <button
            id="prevButton"
            class="group p-3 rounded-full bg-white dark:bg-dark-lighter shadow-md hover:shadow-lg transition-all duration-200"
            aria-label="Témoignage précédent"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-500 dark:text-gray-400 group-hover:text-primary dark:group-hover:text-primary-dark" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>

          <div class="flex items-center gap-3 indicator-container">
            {testimonials.map((_, idx) => (
              <button
                class:list={[
                  "indicator-dot rounded-full transition-all duration-300",
                  idx === 0
                    ? "bg-primary dark:bg-primary-dark w-6 h-3"
                    : "bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 w-3 h-3"
                ]}
                data-index={idx}
                aria-label={`Aller au témoignage ${idx + 1}`}
              ></button>
            ))}
          </div>

          <button
            id="nextButton"
            class="group p-3 rounded-full bg-white dark:bg-dark-lighter shadow-md hover:shadow-lg transition-all duration-200"
            aria-label="Témoignage suivant"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-500 dark:text-gray-400 group-hover:text-primary dark:group-hover:text-primary-dark" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </div>
      </div>
    </div>

    <!-- Call to Action -->
    <div class="mt-16 text-center">
      <a
        href="#demo"
        class="inline-flex items-center px-8 py-4 border border-transparent text-base font-medium rounded-md text-white bg-primary hover:bg-primary-dark md:text-lg transition-all duration-300 hover:-translate-y-[2px] hover:shadow-md"
      >
        Demander une démo personnalisée
      </a>
    </div>
  </div>
</section>

<script>
  // Gestion du slider des témoignages
  document.addEventListener('DOMContentLoaded', () => {
    let currentIndex = 0;
    const testimonialSlides = document.querySelectorAll('.testimonial-slide');
    const totalSlides = testimonialSlides.length;
    const indicatorDots = document.querySelectorAll('.indicator-dot');

    function showSlide(index: number) {
      // Masquer tous les témoignages
      testimonialSlides.forEach(slide => {
        slide.classList.add('opacity-0', 'invisible', 'absolute', 'inset-0');
      });

      // Réinitialiser tous les indicateurs
      indicatorDots.forEach(dot => {
        dot.classList.remove('bg-primary', 'dark:bg-primary-dark', 'w-6');
        dot.classList.add('bg-gray-300', 'dark:bg-gray-600', 'w-3');
      });

      // Afficher le témoignage sélectionné
      testimonialSlides[index].classList.remove('opacity-0', 'invisible', 'absolute', 'inset-0');

      // Mettre à jour l'indicateur actif
      indicatorDots[index].classList.add('bg-primary', 'dark:bg-primary-dark', 'w-6');
      indicatorDots[index].classList.remove('bg-gray-300', 'dark:bg-gray-600', 'w-3');

      // Mettre à jour l'index courant
      currentIndex = index;
    }

    // Gérer le clic sur le bouton suivant
    const nextButton = document.getElementById('nextButton');
    if (nextButton) {
      nextButton.addEventListener('click', () => {
        const nextIndex = (currentIndex + 1) % totalSlides;
        showSlide(nextIndex);
      });
    }

    // Gérer le clic sur le bouton précédent
    const prevButton = document.getElementById('prevButton');
    if (prevButton) {
      prevButton.addEventListener('click', () => {
        const prevIndex = (currentIndex - 1 + totalSlides) % totalSlides;
        showSlide(prevIndex);
      });
    }

    // Gérer les clics sur les indicateurs
    indicatorDots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showSlide(index);
      });
    });
  });
</script>

<style>
  /* Style pour assurer une transition fluide entre les témoignages */
  .testimonial-container {
    min-height: 300px; /* Hauteur minimum pour éviter le redimensionnement */
    position: relative;
    overflow: hidden;
  }

  .testimonial-slide {
    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
  }

  .testimonial-slide.invisible {
    visibility: hidden;
  }
</style>