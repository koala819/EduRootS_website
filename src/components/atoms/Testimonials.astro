---
import { Icon } from "astro-icon/components";

interface Testimonial {
  id: number;
  content: string;
  author: string;
  position: string;
  rating: number;
}

const testimonials: Testimonial[] = [
  {
    id: 1,
    content: "Le jour où j'ai compris la valeur d'EduXcoM, c'était pendant une réunion avec un parent inquiet. En quelques clics, j'ai pu lui montrer l'évolution précise de son enfant depuis le début de l'année. Son soulagement était visible. Maintenant, je passe mes soirées à préparer des cours captivants plutôt qu'à remplir des formulaires administratifs sans fin.",
    author: "Fatima Ali",
    position: "Enseignante",
    rating: 5
  },
  {
    id: 2,
    content: "Notre école accueille des élèves de milieux très divers, avec des parents parfois peu disponibles en raison de leurs horaires de travail. Grâce aux notifications personnalisées d'EduXcoM, même les familles les plus occupées restent connectées à la vie scolaire de leurs enfants. Une mère m'a confié récemment que c'était la première année où elle se sentait véritablement impliquée dans l'éducation de sa fille.",
    author: "Amina Touhami",
    position: "Enseignante",
    rating: 5
  },
  {
    id: 3,
    content: "En tant que responsable administrative, je suivais autrefois l'évolution des classes avec des dossiers papier et des tableaux Excel complexes. Aujourd'hui, mon tableau de bord EduXcoM me signale automatiquement les élèves nécessitant un soutien supplémentaire. Cette approche proactive nous a permis de réduire l'échec scolaire de 17% l'année dernière.",
    author: "Farid Rachidi",
    position: "Responsable administrative",
    rating: 5
  },
  {
    id: 4,
    content: "J'étais sceptique quand on nous a présenté EduXcoM à la rentrée. Encore un système qui nous prendrait plus de temps qu'il n'en ferait gagner, pensais-je. Mais dès la première semaine, j'ai changé d'avis. Je note les absences pendant l'appel sur mon téléphone, et je saisis les comportements problématiques en temps réel. Le bureau administratif est immédiatement informé, et les parents reçoivent les notifications importantes sans que j'aie à envoyer des emails individuels.",
    author: "Hassan Mahmoud",
    position: "Enseignante",
    rating: 5
  },
  // {
  //   id: 5,
  //   content: "Les tableaux de bord personnalisés nous permettent d'avoir une vision claire des progrès de chaque classe. Cela nous aide à identifier rapidement les domaines nécessitant une attention particulière et à adapter nos méthodes pédagogiques en conséquence.",
  //   author: "Céline",
  //   position: "Bureau administratif",
  //   rating: 5
  // }
];
---

<section class="overflow-hidden mb-20">
  <div class="mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center my-16">
      <h2>Témoignages</h2>
      <p>Ce que nos utilisateurs disent d'EduXcoM</p>
    </div>

    <div class="relative">

        <!-- Testimonial Container -->
        <div class="testimonial-container relative bg-light-dark dark:bg-dark-lighter rounded-2xl shadow-xl">
          <!-- Bulle Droite -->
          <div class="absolute -top-4 -right-4 w-24 h-24 bg-primary dark:bg-primary-dark rounded-full opacity-50" />
          <!-- Bulle Gauche -->
          <div class="absolute -bottom-6 -left-6 w-32 h-32 bg-secondary dark:bg-secondary-dark rounded-full opacity-50" />

          <!-- Testimonials -->
          <div class="testimonial-slides relative">
            {testimonials.map((testimonial, index) => (
              <div
                id={`testimonial-${testimonial.id}`}
                class:list={[
                  "p-8 md:p-10 transition-all duration-500 testimonial-slide",
                  { "opacity-0 invisible absolute inset-0": index !== 0 }
                ]}
                data-index={index}
              >
                <!-- Rating - Left aligned -->
                <div class="flex mb-6 justify-start">
                  {Array(testimonial.rating).fill(0).map(() => (
                    <span class="text-amber-400 mr-1 text-4xl">★</span>
                  ))}
                </div>

                <blockquote class="mb-8">
                  <!-- Text - Left aligned with larger font -->
                  <p class="leading-relaxed italic text-left dark:!text-dark">
                    "{testimonial.content}"
                  </p>
                </blockquote>

                <!-- Footer with right-aligned signature -->
                <div class="border-t border-gray-200 dark:border-gray-700 pt-4 mt-4">
                  <div class="text-right">
                    <div class="font-medium text-dark text-lg">
                      {testimonial.author}
                    </div>
                    <div class="text-[#014F7A] dark:text-dark">
                      {testimonial.position}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- Navigation Buttons - Outside the card -->
        <div class="flex justify-between mt-12">
          <button
            id="prevButton"
            class="btn-primary"
            aria-label="Témoignage précédent"
          >
          <Icon name='arrow-before' class="text-3xl text-light dark:text-dark" />
          </button>

          <div class="flex items-center gap-3 indicator-container">
            {testimonials.map((_, idx) => (
              <button
                class:list={[
                  "indicator-dot rounded-full transition-all duration-300",
                  idx === 0
                    ? "bg-primary dark:bg-primary-dark w-6 h-3"
                    : "bg-gray-300 dark:bg-gray-600 hover:bg-primary dark:hover:bg-primary-dark w-3 h-3  hover:cursor-pointer"
                ]}
                data-index={idx}
                aria-label={`Aller au témoignage ${idx + 1}`}
              ></button>
            ))}
          </div>

          <button
            id="nextButton"
            class="btn-primary"
            aria-label="Témoignage suivant"
          >
          <Icon name='arrow-next' class="text-3xl text-light dark:text-dark" />
          </button>
        </div>

    </div>


  </div>
</section>

<script>
  // Gestion du slider des témoignages
  document.addEventListener('DOMContentLoaded', () => {
    let currentIndex = 0;
    const testimonialSlides = document.querySelectorAll('.testimonial-slide');
    const totalSlides = testimonialSlides.length;
    const indicatorDots = document.querySelectorAll('.indicator-dot');

    function showSlide(index: number) {
      // Masquer tous les témoignages
      testimonialSlides.forEach(slide => {
        slide.classList.add('opacity-0', 'invisible', 'absolute', 'inset-0');
      });

      // Réinitialiser tous les indicateurs
      indicatorDots.forEach(dot => {
        dot.classList.remove('bg-primary', 'dark:bg-primary-dark', 'w-6');
        dot.classList.add('bg-gray-300', 'dark:bg-gray-600', 'w-3');
      });

      // Afficher le témoignage sélectionné
      testimonialSlides[index].classList.remove('opacity-0', 'invisible', 'absolute', 'inset-0');

      // Mettre à jour l'indicateur actif
      indicatorDots[index].classList.add('bg-primary', 'dark:bg-primary-dark', 'w-6');
      indicatorDots[index].classList.remove('bg-gray-300', 'dark:bg-gray-600', 'w-3');

      // Mettre à jour l'index courant
      currentIndex = index;
    }

    // Gérer le clic sur le bouton suivant
    const nextButton = document.getElementById('nextButton');
    if (nextButton) {
      nextButton.addEventListener('click', () => {
        const nextIndex = (currentIndex + 1) % totalSlides;
        showSlide(nextIndex);
      });
    }

    // Gérer le clic sur le bouton précédent
    const prevButton = document.getElementById('prevButton');
    if (prevButton) {
      prevButton.addEventListener('click', () => {
        const prevIndex = (currentIndex - 1 + totalSlides) % totalSlides;
        showSlide(prevIndex);
      });
    }

    // Gérer les clics sur les indicateurs
    indicatorDots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showSlide(index);
      });
    });
  });
</script>

<style>
  /* Style pour assurer une transition fluide entre les témoignages */
  .testimonial-container {
    min-height: 300px; /* Hauteur minimum pour éviter le redimensionnement */
    position: relative;
    overflow: hidden;
  }

  .testimonial-slide {
    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
  }

  .testimonial-slide.invisible {
    visibility: hidden;
  }
</style>