---
import GreenCheck from "@/components/atoms/GreenCheck.astro";
import ImageLightbox from "@/components/react/ImageLightbox";
import Badge from "@/components/atoms/Badge.astro";
import FadeInSection from "@/components/react/FadeInSection";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

export interface Feature {
  text: string;
  strongParts?: string[];
}

export interface Props {
  badgeTitle: string;
  title: string;
  description: string;
  features: Feature[];
  imageSrc: ImageMetadata;
  imageUrl: string;
  imageAlt: string;
  direction?: "left" | "right";
  reverse?: boolean;
}

const {
  badgeTitle,
  title,
  description,
  features,
  imageSrc,
  imageUrl,
  imageAlt,
  direction = "left",
  reverse = false,
} = Astro.props;

// Helper function to replace strong parts in the text
function renderTextWithStrong(text: string, strongParts: string[] = []) {
  if (!strongParts || strongParts.length === 0) {
    return text;
  }

  let result = text;
  strongParts.forEach(part => {
    result = result.replace(part, `<strong>${part}</strong>`);
  });

  return result;
}
---

<article
  class="container mx-auto grid min-h-[600px] grid-cols-1 items-stretch gap-12 py-20 md:grid-cols-2"
>
  <aside
    class={`${reverse ? "order-2 " : "order-1"} flex flex-col justify-center`}
  >
    <FadeInSection client:visible direction={direction} delay={0.1}>
      <Badge title={badgeTitle} />
      <h2 class="mb-4 text-2xl font-bold md:text-3xl">
        {title}
      </h2>
      <p class="text-dark-light dark:text-dark-lighter mb-6 text-lg">
        {description}
      </p>
      <ul class="space-y-3">
        {
          features.map(feature => (
            <li class="flex items-start">
              <GreenCheck />
              <span
                set:html={renderTextWithStrong(
                  feature.text,
                  feature.strongParts
                )}
              />
            </li>
          ))
        }
      </ul>
    </FadeInSection>
  </aside>

  <aside
    class={`${reverse ? "order-2 md:order-1 " : "  order-2"} flex items-center justify-center pb-16`}
  >
    <!-- <ImageAnimation client:visible> -->

    <!-- <ImageLightbox
      client:visible
      src={imageUrl}
      alt="Tableau de bord administratif EduXcoM sur ordinateur portable"
    > -->
    <Image
      src={imageSrc}
      alt={imageAlt}
      widths={[400, 800, 1200]}
      sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 800px"
      quality={85}
      format="webp"
      loading="eager"
      class="h-full w-full transform rounded-lg object-cover transition-all duration-300 group-hover:-translate-y-1 group-hover:scale-105 hover:drop-shadow-xl"
    />

    <!-- Overlay qui apparaît au survol -->
    <!-- <Overlay title="Agrandir" /> -->
    <!-- </ImageLightbox> -->
    <!-- <a
      href={imageUrl}
      class="block overflow-hidden"
      target="_blank"
      aria-label="Voir l'image en taille réelle"
    >
      <img
        src={imageSrc}
        alt={imageAlt}
        class="h-auto w-full rounded-lg hover:cursor-zoom-in"
      />
    </a> -->
    <!-- </ImageAnimation> -->
  </aside>
</article>
