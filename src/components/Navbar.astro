---
import { Image } from 'astro:assets';
import logoSrc from '../assets/LogoEduXcom.svg';

interface NavItem {
  href: string;
  text: string;
}

const navItems: NavItem[] = [
  { href: '#features', text: 'Fonctionnalit√©s' },
  { href: '#solutions', text: 'Solutions' },
  { href: '#testimonials', text: 'T√©moignages' },
  { href: '#faq', text: 'FAQ' },
];
---

<header class="fixed top-0 left-0 w-full z-[1000] bg-white dark:bg-black shadow-md">
  <div class="container mx-auto px-4">
    <nav class="flex justify-between items-center py-4">
      <!-- Logo -->
      <a
        href="/"
        class="text-2xl lg:text-3xl font-extrabold text-primary dark:text-primary-dark flex items-center gap-2"
      >
        <Image src={logoSrc} loading="eager" alt="EduXcoM Logo" width="36" height="36" />
        Edu<span class="text-secondary dark:text-secondary-dark">XcoM</span>
      </a>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-button"
        class="md:hidden text-2xl cursor-pointer"
        aria-label="Toggle menu"
      >
        <span id="menu-icon">‚ò∞</span>
      </button>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center gap-4 lg:gap-8">
        <ul class="flex items-center gap-8">
          {
            navItems.map((item) => (
              <li class="group">
                <a
                  href={item.href}
                  class="font-medium relative transition-colors duration-300 hover:text-primary dark:hover:text-primary-dark text-xs lg:text-sm"
                >
                  {item.text}
                  <span class="absolute bottom-[-4px] left-0 w-0 h-0.5 bg-primary dark:bg-primary-dark transition-all duration-300 group-hover:w-full" />
                </a>
              </li>
            ))
          }
        </ul>

        <!-- Desktop Theme Toggle -->
        <button
          id="theme-toggle-desktop"
          class="p-1 lg:p-2 rounded-md bg-light-dark dark:bg-light-dark transition-colors duration-200"
        >
          <span class="block dark:hidden">üåô</span>
          <span class="hidden dark:block">‚òÄÔ∏è</span>
        </button>

        <a
          href="#demo"
          class="bg-primary dark:bg-primary-dark text-white font-semibold py-2.5 px-5 rounded-lg cursor-pointer transition-all duration-300 hover:bg-primary-dark dark:hover:bg-primary hover:-translate-y-[2px] hover:shadow-md text-xs lg:text-xl"
        >
          Demander une d√©mo
        </a>
      </div>
    </nav>

    <!-- Mobile Navigation Menu (Hidden by default) -->
    <div
      id="mobile-menu"
      class="hidden py-4 md:hidden h-screen bg-white dark:bg-dark shadow-md rounded-lg"
    >
      <div class="flex justify-center w-full p-5">
        <button
          id="theme-toggle-mobile"
          class="p-2 rounded-md bg-light-dark dark:bg-dark-light transition-colors duration-200"
        >
          <span class="block dark:hidden">üåô</span>
          <span class="hidden dark:block">‚òÄÔ∏è</span>
        </button>
      </div>
      <ul class="flex flex-col gap-4 mb-6">
        {
          navItems.map((item) => (
            <li>
              <a
                href={item.href}
                class="block font-medium py-2 transition-colors duration-300 hover:text-primary dark:hover:text-primary-dark"
              >
                {item.text}
              </a>
            </li>
          ))
        }
      </ul>
      <a
        href="#demo"
        class="block text-center bg-primary dark:bg-primary-dark text-white dark:text-dark font-semibold py-2.5 px-5 rounded-lg cursor-pointer transition-all duration-300 hover:bg-primary-dark dark:hover:bg-primary"
      >
        Demander une d√©mo
      </a>
    </div>
  </div>

  <script>
    // Toggle mobile menu
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');

    function toggleMenu() {
      if (mobileMenu?.classList.contains('hidden')) {
        mobileMenu.classList.remove('hidden');
        if (menuIcon) menuIcon.textContent = '‚úï';
      } else {
        mobileMenu?.classList.add('hidden');
        if (menuIcon) menuIcon.textContent = '‚ò∞';
      }
    }

    mobileMenuButton?.addEventListener('click', toggleMenu);

    // Close mobile menu when clicking on a link
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach((link) => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
        if (menuIcon) menuIcon.textContent = '‚ò∞';
      });
    });

    // Theme toggle functionality
    const themeToggleDesktop = document.getElementById('theme-toggle-desktop');
    const themeToggleMobile = document.getElementById('theme-toggle-mobile');

    function toggleTheme() {
      document.documentElement.classList.toggle('dark');
      localStorage.theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
    }

    themeToggleDesktop?.addEventListener('click', toggleTheme);
    themeToggleMobile?.addEventListener('click', toggleTheme);
  </script>
</header>
