---
import FooterList from "@/components/atoms/FooterList.astro";
import { Icon } from "astro-icon/components";
import ToggleTheme from "@/components/atoms/ToggleTheme.astro";

const currentYear = new Date().getFullYear();

const navigationItems = [
  {
    name: "Accueil",
    href: "#home",
  },
  {
    name: "Fonctionnalités",
    href: "#features",
  },
  {
    name: "Tarif",
    href: "#pricing",
  },
  {
    name: "Blog",
    href: "/blog",
  },
  {
    name: "Témoignages",
    href: "#testimonials",
  },
  {
    name: "FAQ",
    href: "#faq",
  },
];
---

<footer class="bg-dark dark:bg-dark-lighter/35 text-light mt-12 pt-16 pb-6">
  <div class="container mx-auto px-4">
    <section class="grid grid-cols-1 gap-2 md:grid-cols-12">
      <!-- Logo et description -->
      <aside class="md:col-span-3">
        <div class="flex items-center">
          <h2 class="!text-primary-dark !text-4xl font-bold">Edu</h2>
          <h2 class="!text-secondary-dark !text-4xl">roots</h2>
        </div>

        <p class="!text-light mb-6 text-sm">
          Application de gestion scolaire tout-en-un qui simplifie la vie des
          établissements, enseignants, élèves et parents.
        </p>
        <figure class="flex space-x-4">
          <a
            href="https://github.com/koala819/EduRootS_website"
            target="_blank"
            aria-label="lien vers le code source"
            rel="noopener noreferrer"
            class="hover:bg-secondary-dark hover:text-dark rounded-full p-2 transition-colors"
          >
            <Icon name="github" class="text-3xl" />
          </a>
          <a
            href="https://www.linkedin.com/in/xavier-genolhac/"
            target="_blank"
            aria-label="Voir le profil LinkedIn"
            rel="noopener noreferrer"
            class="hover:bg-secondary-dark hover:text-dark rounded-full p-2 transition-colors"
          >
            <Icon name="linkedin" class="text-3xl" />
          </a>
          <div class="p-2">
            <ToggleTheme name="theme-toggle-footer" />
          </div>
        </figure>
      </aside>

      <aside
        class="mt-4 grid w-full grid-cols-4 gap-1 md:col-span-9 md:mt-0 md:grid-cols-9"
      >
        <!-- Navigation rapide -->
        <div class="col-span-2 flex flex-col items-center md:col-span-3">
          <h3 class="!text-primary-dark mb-4">Navigation</h3>
          <ul class="space-y-3">
            {
              navigationItems.map(item => (
                <FooterList link={item.href} text={item.name} />
              ))
            }
          </ul>
        </div>

        <!-- Contact -->
        <div class="col-span-2 flex flex-col items-center md:col-span-3">
          <h3 class="!text-primary-dark mb-4">Contact</h3>
          <a
            href="mailto:contact@dix31.com"
            class="text-light hover:text-secondary-dark">contact@dix31.com</a
          >
        </div>

        <!-- Logo Eduroots -->
        <div
          class="text-primary-dark col-span-4 flex flex-col items-center justify-center md:col-span-3"
        >
          <Icon name="logo-Eduroots" size="122" />
        </div>
      </aside>
    </section>

    <!-- Newsletter Section -->
    <section
      class="dark:bg-dark-lighter/20 bg-primary/40 mt-12 mb-12 rounded-lg p-8"
    >
      <div class="mx-auto max-w-2xl text-center">
        <h3 class="!text-primary-dark dark:text-light mb-4 !text-2xl">
          Abonnez-vous à la newsletter
        </h3>
        <p class="!text-light dark:text-light/70 mb-6">
          Recevez les dernières actualités et fonctionnalités d'Eduroots
          directement dans votre boîte mail.
        </p>
        <div
          id="form-newsletter-success"
          class="text-success dark:bg-success/10 dark:!text-success-dark my-3 hidden rounded bg-green-100 p-3"
        >
          Message envoyé avec succès !
        </div>
        <div
          id="form-newsletter-error"
          class="text-error dark:text-error-dark my-3 hidden rounded bg-red-100 p-3"
        >
          Une erreur s'est produite. Veuillez réessayer.
        </div>
        <form
          id="contact-newsletter-form"
          name="contact form"
          class="flex flex-col gap-4 sm:flex-row"
        >
          <!-- Ajouter ce champ honeypot invisible pour détecter les bots -->
          <input type="text" name="emai" style="display:none" />

          <input
            type="email"
            placeholder="Votre email"
            name="email"
            id="contact-footer-email"
            class="form_input placeholder:!text-light focus-visible:!border-secondary-dark focus-visible:!ring-secondary-dark"
            required
          />
          <button
            type="submit"
            class="bg-secondary-dark hover:bg-primary-dark text-dark rounded-full px-8 py-3 font-medium transition-colors hover:cursor-pointer"
            id="submit-newsletter-button"
          >
            <span id="button-newsletter-text" class="dark:!text-dark"
              >S'abonner</span
            >
            <span id="button-newsletter-loader" class="hidden">
              <svg
                class="mr-1 inline-block h-5 w-5 animate-spin"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
              >
                <circle
                  class="opacity-25"
                  cx="12"
                  cy="12"
                  r="10"
                  stroke="currentColor"
                  stroke-width="4"></circle>
                <path
                  class="opacity-75"
                  fill="currentColor"
                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                ></path>
              </svg>
              En cours...
            </span>
          </button>
        </form>
      </div>
    </section>

    <!-- Divider -->
    <div class="border-secondary-dark mt-12 border-t pt-6">
      <div
        class="text-light flex flex-col items-center justify-between text-sm md:flex-row"
      >
        <p class="!text-light inline-flex items-center">
          <Icon name="copyleft" class="mr-4 text-base md:text-3xl" />
          {currentYear} Eduroots. Code source sous licence <a
            href="https://www.gnu.org/licenses/agpl-3.0.html"
            target="_blank"
            rel="noopener">AGPL v3</a
          >
        </p>
        <div class="mt-4 flex gap-6 md:mt-0">
          <a
            href="/mentions-legales"
            class="hover:text-primary-dark transition-colors"
            >Mentions légales</a
          >

          <a href="/cgv" class="hover:text-primary-dark transition-colors"
            >CGV</a
          >
          <a href="/rgpd" class="hover:text-primary-dark transition-colors"
            >Protection des données
          </a>
        </div>
      </div>
    </div>
  </div>
</footer>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById(
      "contact-newsletter-form"
    ) as HTMLFormElement;
    const successMessage = document.getElementById(
      "form-newsletter-success"
    ) as HTMLDivElement;
    const errorMessage = document.getElementById(
      "form-newsletter-error"
    ) as HTMLDivElement;
    const submitButton = document.getElementById(
      "submit-newsletter-button"
    ) as HTMLButtonElement;
    const buttonText = document.getElementById(
      "button-newsletter-text"
    ) as HTMLSpanElement;
    const buttonLoader = document.getElementById(
      "button-newsletter-loader"
    ) as HTMLSpanElement;

    // Fonction pour réinitialiser les messages
    function resetMessages() {
      successMessage.classList.add("hidden");
      errorMessage.classList.add("hidden");
    }

    // Fonction pour afficher l'état de chargement
    function setLoading(isLoading: boolean) {
      if (isLoading) {
        buttonText.classList.add("hidden");
        buttonLoader.classList.remove("hidden");
        submitButton.disabled = true;
      } else {
        buttonText.classList.remove("hidden");
        buttonLoader.classList.add("hidden");
        submitButton.disabled = false;
      }
    }

    form?.addEventListener("submit", async e => {
      e.preventDefault();
      resetMessages();
      setLoading(true);

      try {
        const formData = new FormData(form);

        const response = await fetch("/newsletter", {
          method: "POST",
          body: formData,
        });

        const result = await response.json();

        if (response.ok) {
          successMessage.textContent =
            result.statusText || "Message envoyé avec succès !";
          successMessage.classList.remove("hidden");
          form.reset();
        }
        // Afficher le message d'erreur
        else {
          errorMessage.textContent =
            result.statusText ||
            "Une erreur s'est produite. Veuillez réessayer.";
          errorMessage.classList.remove("hidden");
        }
      } catch (error) {
        console.error("Erreur lors de l'envoi du formulaire:", error);
        errorMessage.textContent =
          "Une erreur s'est produite. Veuillez réessayer.";
        errorMessage.classList.remove("hidden");
      } finally {
        setLoading(false);
      }
    });
  });
</script>
