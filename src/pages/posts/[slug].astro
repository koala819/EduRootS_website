---
import Layout from "@/layouts/BlogLayout.astro";
import { slugifyTitle } from "@/scripts/slugify";
import MarkdownRenderer from "@/components/blog/molecules/MarkdownRenderer.astro";
import type { MarkdownInstance } from "astro";

interface Frontmatter {
  title: string;
  date?: string;
  readTime?: number;
  // Ajoutez les autres champs de  frontmatter
}

export async function getStaticPaths() {
  const allPosts = await import.meta.glob<MarkdownInstance<Frontmatter>>(
    "@/pages/posts/*.md",
    { eager: true }
  );
  const cocon1 = await import.meta.glob<MarkdownInstance<Frontmatter>>(
    "@/pages/posts/Actus_Tendances/*.md",
    { eager: true }
  );

  const postModules = [...Object.values(allPosts), ...Object.values(cocon1)];

  const postsData = postModules
    .map(postModule => {
      if (
        !postModule ||
        !postModule.frontmatter ||
        typeof postModule.rawContent !== "function"
      ) {
        console.warn(
          "[getStaticPaths] Module MD invalide ou incomplet trouvé : ",
          postModule?.file
        );
        return null;
      }
      try {
        const rawString = postModule.rawContent();

        if (typeof rawString !== "string") {
          console.warn(
            "[getStaticPaths] postModule.rawContent() n'a pas retourné une chaîne pour : ",
            postModule?.file
          );
          return null;
        }

        return {
          frontmatter: postModule.frontmatter,
          rawContent: rawString, // Stocker la chaîne résultante
          url: postModule.url, // Garder l'URL si besoin
          file: postModule.file, // Garder le chemin du fichier si besoin
        };
      } catch (error) {
        console.error(
          "[getStaticPaths] Erreur en appelant rawContent() pour : ",
          postModule?.file,
          error
        );
        return null;
      }
    })
    .filter(p => p !== null);

  return postsData
    .map(postData => {
      if (!postData.frontmatter || !postData.frontmatter.title) {
        console.error(
          "[getStaticPaths] Données de post invalides pour slugification : ",
          postData
        );
        return null;
      }
      return {
        params: {
          slug: slugifyTitle(postData.frontmatter.title),
        },
        props: {
          post: postData,
        },
      };
    })
    .filter(p => p !== null);
}

const { post } = Astro.props;

const rawMarkdownContent = post?.rawContent;
const frontmatter = post?.frontmatter;
---

<Layout
  pageTitle={frontmatter?.title ?? "Titre Indisponible"}
  displayWave={false}
>
  <article
    class="prose prose-lg dark:prose-invert mx-auto max-w-3xl px-4 py-12"
  >
    {
      frontmatter ? (
        <header class="mb-10 border-b pb-4">
          <p class="mt-2">
            Publié le {frontmatter.date ?? "N/A"} · Temps de lecture :{" "}
            {frontmatter.readTime ?? "?"} min
          </p>
        </header>
      ) : (
        <p>Erreur: Frontmatter manquant.</p>
      )
    }

    <MarkdownRenderer content={rawMarkdownContent} />
    <div class="bg-primary dark:bg-primary-dark mt-4 h-px w-full"></div>
    <p>
      Eduroots est une plateforme éducative open source qui connecte enseignants,
      élèves et parents pour une gestion d'école en ligne fluide et efficace.
      Notre solution tout-en-un simplifie le quotidien des établissements
      scolaires tout en renforçant la qualité pédagogique._
    </p>
  </article>
</Layout>
